#! /bin/echo This_file_must_be_sourced,_not_executed
#
# ----------------------------------------------------------------------
# agen5/bootstrap.dir --- maintainer's bootstrap script
#
# Author:            Bruce Korb <bkorb@gnu.org>
##  This file is part of AutoGen.
##  AutoGen Copyright (C) 1992-2018 by Bruce Korb - all rights reserved
##
## AutoGen is free software: you can redistribute it and/or modify it
## under the terms of the GNU General Public License as published by the
## Free Software Foundation, either version 3 of the License, or
## (at your option) any later version.
##
## AutoGen is distributed in the hope that it will be useful, but
## WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
## See the GNU General Public License for more details.
##
## You should have received a copy of the GNU General Public License along
## with this program.  If not, see <http://www.gnu.org/licenses/>.
# ----------------------------------------------------------------------
#
#  This script rebuilds sources not kept in the GIT repository.
#  These files are distributed, so it is not necessary to invoke
#  AutoGen before building AutoGen.

#  "make" will invoke this file with the name of the desired output
#  as an argument.  We do this here rather than in the make file
#  because some of the rules are complex and we don't want to
#  deal with the dual update problem.

set_defaults()
{
    test "X${mainpid}" = X && {
        PS4='+slb=${FUNCNAME:-=}-$LINENO> ' \
           source ${top_srcdir:-..}/config/bootstrap.shlib
        PS4='+ag5=${FUNCNAME:-=}-$LINENO> '
        free_trap=true
    } || {
        free_trap=false
    }

    builddir=$(pwd)
    srcdir=$builddir
    top_srcdir=$(cd $builddir/.. ; pwd)

    #  Make sure we have a default for top build and source.
    #  Some of the templates need this information.
    #
    eval "set -a;$(egrep '^AG_[A-Z0-9_]*=' ${top_srcdir}/VERSION);set +a"

    #  disable any $HOME defaults
    #
    HOME=/dev/null
    SHELL=${POSIX_SHELL-/bin/sh}

    ${VERBOSE:-false} && set -x || :
    #  Ensure complete success or a noticable failure
    #
    set -e

    mk_stamps=$builddir/mk-stamps.sh

    readonly stamp_list=$(
        echo "stamp-proto"
        sed -n '/^make_[a-z_]*[(]/{;s/^make_/stamp-/;s/[()].*//;p;}' \
            ${mk_stamps})

    test ${#stamp_list} -gt 16 || \
        die "not enough agen5 stamps: " $stamp_list

    test -x ${mk_stamps} || \
        chmod a+x ${mk_stamps} || \
        die "cannot execute ${mk_stamps}"

    export builddir srcdir top_srcdir TEMP_DIR
}

assemble_dot_dot_Mf() {
    :
} > ../Makefile.am

assemble_Makefile() {
    sed '/# *start-generated-text/q' ${srcdir}/Makefile.am.pre
    rm ${srcdir}/Makefile.am.pre
    printf '\nif AMDEP\n'

    depfl_list=
    for f in $stamp_list
    do
        depfl=DEPFL_${f^^}
        depfl=${depfl//-/_}
        printf '%-12s= $(DEPDIR)/dep-%s.mk\n' $depfl $f
        printf '$(%s) :\n\t$(SHELL) $(stamp_script) "$@"\n' $depfl
        printf 'include $(%s)\n' $depfl
        depfl_list+=$(printf '%-12s= "$@"' $depfl)$'\n'
    done
    echo else$'\n'"${depfl_list}endif"

    echo list_stamps = '\'
    sflist=''
    for f in $stamp_list
    do sflist=${sflist}$f${nl}
    done
    printf %s "$sflist" | \
        ${CLexe} --spread=1 -I4 --line=' \'

    fmt='\n%s:\n\t@target="$(AUTOGEN_%s_TList)" \\\n'
    fmt+='\t$(MAKE_STAMP)\n'
    for f in $stamp_list
    do
        g=$(echo $f | sed 's/[^a-zA-Z0-9]/_/g')
        printf "$fmt" $f $g
    done
    printf '.PHONY: stamps\nstamps: $(list_stamps)\n%s' \
           $'\n# end-generated-text\n# end of Makefile.am\n'
} > Makefile.am

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
#
#  M A I N
#

test "X$1" = Xpre || return 0
set_defaults

source ${mk_stamps} $stamp_list

assemble_Makefile

# Local Variables:
# mode:shell-script
# sh-indentation:4
# sh-basic-offset:4
# indent-tabs-mode: nil
# End:

# end of agen5/bootstrap.dir
