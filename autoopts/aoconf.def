AutoGen Definitions aoconf.tpl;

// This file is used for bootstrapping only.  Useful _only_ for
// checked out source files.

/*
 *  This file is part of AutoOpts, a companion to AutoGen.
 *  AutoOpts is free software.
 *  AutoOpts is Copyright (C) 1992-2020 by Bruce Korb - all rights reserved
 *
 *  AutoOpts is available under any one of two licenses.  The license
 *  in use must be one of these two and the choice is under the control
 *  of the user of the license.
 *
 *   The GNU Lesser General Public License, version 3 or later
 *      See the files "COPYING.lgplv3" and "COPYING.gplv3"
 *
 *   The Modified Berkeley Software Distribution License
 *      See the file "COPYING.mbsd"
 *
 *  These files have the following sha256 sums:
 *
 *  8584710e9b04216a394078dc156b781d0b47e1729104d666658aecef8ee32e95  COPYING.gplv3
 *  4379e7444a0e2ce2b12dd6f5a52a27a4d02d39d247901d3285c88cf0d37f477b  COPYING.lgplv3
 *  13aa749a5b0a454917a944ed8fffc530b784f5ead522b1aacaf4ec8aa55a6239  COPYING.mbsd
 */

cfg = {
   c-name   = prefix;
   c-desc   = <<- _EOF_
	The \fIautogen\fP package installation prefix.
	_EOF_;
};

cfg = {
   c-name   = datarootdir;
   c-desc   = <<- _EOF_
	The root directory for various data directories.
	In this case, there is only one, "datadir".
	_EOF_;
};

cfg = {
   c-name   = datadir;
   c-desc   = <<- _EOF_
	The directory for various data directories.
	_EOF_;
};

cfg = {
   c-name   = package;
   c-val    = '@PACKAGE@';
   c-desc   = <<- _EOF_
	The name of the package that provides \fBautoopts\fP.  This is always
	"\fIautogen\fP".
	_EOF_;
};

cfg = {
   c-name   = includedir;
   c-desc   = <<- _EOF_
	The directory where the AutoOpts headers are stored.
	This does not include the "-I" prefix gotten by specifying "cflags".
	_EOF_;
};

cfg = {
   c-name   = exec_prefix;
   c-desc   = <<- _EOF_
	The installation root for libraries and executables.
	_EOF_;
};

cfg = {
   c-name   = bindir;
   c-desc   = <<- _EOF_
	The destination directory for executable scripts and programs
	installed by the \fIautogen\fP package.
	_EOF_;
};

cfg = {
   c-name   = libdir;
   c-desc   = <<- _EOF_
	The libopts installation directory.
	_EOF_;
};

cfg = {
   c-name   = ldopts;
   c-val    = '@AG_LDFLAGS@';
   c-desc   = <<- _EOF_
	The linker options to use when linking a program to libopts.
	_EOF_;
};

cfg = {
   c-name   = exeext;
   c-val    = '@EXEEXT@';
   c-desc   = <<- _EOF_
	The executable file extension used for the autogen executable.
	_EOF_;
};

cfg = {
   c-name   = version;
   c-val    = '@AO_CURRENT@:@AO_REVISION@:@AO_AGE@';
   c-desc   = <<- _EOF_
	Print the currently installed version of autoopts.
	_EOF_;
};

cfg = {
   c-name   = dotver;
   c-val    = '@AO_CURRENT@.@AO_REVISION@.@AO_AGE@';
   c-desc   = <<- _EOF_
	Print the currently installed version of autoopts, in dotted format.
	_EOF_;
};

cfg = {
   c-name   = pkgdatadir;
   c-val    = '${datadir}/${package}';
   c-desc   = <<- _EOF_
	The directory containing support files used by autogen.
	_EOF_;
};

cfg = {
   c-name   = 'autogen';
   c-val    = '${bindir}/autogen${exeext}';
   c-desc   = <<- _EOF_
	Print the full path name of the autogen executable.
	_EOF_;
};

cfg = {
   c-name   = ldflags;
   c-val    = '-L${libdir} -lopts';
   c-desc   = <<- _EOF_
	Print the linker flags that are necessary to link an autoopts program
	in the default installation mode (static or dynamic).
	_EOF_;
};

cfg = {
   c-name   = libs;
   c-val    = '${ldflags}';
   c-desc   = <<- _EOF_
	an alternate spelling of "\fIldflags\fP".
	_EOF_;
};

cfg = {
   c-name   = libsrc;
   c-val    = '${pkgdatadir}/libopts-${dotver}.tar.gz';
   c-desc   = <<- _EOF_
	The full path of the redistributable, tear-off libopts library source.
	This file is in gzipped-tarball format.
	_EOF_;
};

cfg = {
   c-name   = static_libs;
   c-val    = '${libdir}/libopts.a';
   c-desc   = <<- _EOF_
	The name of the AR archive of the libopts object code.
	_EOF_;
};

cfg = {
   c-name   = cflags;
   c-val    = '-I${includedir}';
   c-desc   = <<- _EOF_
	Print the compiler flags that are necessary to compile an autoopts program.
	_EOF_;
};

cfg = {
   c-name   = everything;
   c-val    = '';
   c-desc   = <<- _EOF_
	Print the list of all names and values, one per line.
	_EOF_;
};
